plugins {
	id 'org.springframework.boot' version '2.1.4.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'io.spring.sagan'
version = "1.0.0.BUILD-SNAPSHOT"
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

bootJar {
	requiresUnpack '**/jruby-complete-*.jar'
	requiresUnpack '**/asciidoctorj-*.jar'
}
ext {
	springCloudVersion = 'Greenwich.SR1'
}

dependencies {
	implementation 'org.pegdown:pegdown:1.6.0'
	implementation('org.asciidoctor:asciidoctorj:1.6.2') {
		exclude group: 'org.jruby'
	}
	implementation 'org.jruby:jruby-complete:9.2.7.0'
	implementation 'org.jsoup:jsoup:1.11.3'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	compileOnly 'org.springframework.boot:spring-boot-configuration-processor'
	runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task stubsJar(type: Jar, dependsOn: ['copySnippets']) {
	baseName = project.name
	classifier = 'stubs'
	from project.file("${project.buildDir}/stubs")
}

artifacts {
	archives stubsJar
}

task copySnippets(type: Copy, dependsOn: test) {
	from "${project.buildDir}/snippets/stubs"
	into "${project.buildDir}/stubs/META-INF/${project.group}/${project.name}/${project.version}/mappings"
	// In lieu of https://github.com/spring-cloud/spring-cloud-contract/issues/1088 (for rendering _links)
	filter { String line -> line.replace(
		// When Spring Cloud Contract is upgraded can use localhost:{{request.requestLine.port}} 
		'localhost:8080', '{{request.headers.Host}}'
	).replace(
		'"response" : {', '"response" : {"transformers": ["response-template"],'
	).replace(
		// TODO: see if Wiremock can match the content type better
		';charset=UTF-8', ''
	)}
}